{"version":3,"sources":["components/Card.jsx","components/Calendar.jsx","components/Canvas.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","number","name","onClick","react_default","a","createElement","className","concat","Calendar","state","dates","nameDateMap","onMouseMove","e","ax","window","innerWidth","pageX","ay","innerHeight","pageY","_this","setState","style","transform","-webkit-transform","-moz-transform","_this$props","this","props","openDates","onClickHandler","map","date","i","components_Card","key","React","Component","angle","particles","W","H","update","p","y","Math","cos","d","r","x","sin","random","Canvas","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","canvas","createRef","ctx","current","getContext","push","setInterval","clearRect","fillStyle","beginPath","moveTo","arc","PI","fill","draw","width","height","ref","firebase","initializeApp","config","firestore","settings","timestampsInSnapshots","datesDocRef","doc","usersDocRef","App","names","openCurrentDate","Date","getDate","randomNumber","floor","length","selectedName","set","objectSpread","defineProperty","then","console","log","catch","error","filteredNames","filter","onSnapshot","datesDoc","exists","_this2","data","get","userDoc","selectedNames","values","indexOf","components_Canvas","components_Calendar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16bba952.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ number, name, onClick }) => (\n  <div \n    className={`card ${name ? 'card--open' : ''}`}\n    onClick={() => !name && onClick(number)}\n  >âˆ‚\n    <div className=\"card__face card__front\">\n    <span className=\"snowflake\"></span>\n      <div className=\"card__face card__inner\">\n        {number}\n      </div> \n    </div>\n    <div className=\"card__face card__back\">{name}</div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nclass Calendar extends React.Component {\n  state = {\n    dates: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,24],\n    nameDateMap: {}\n  };\n\n  onMouseMove = (e) => {\n    const ax = - (window.innerWidth/2- e.pageX)/20;\n    const ay = (window.innerHeight/2- e.pageY)/10;\n    this.setState({style: {transform:`rotateY(${ax}deg) rotateX(${ay}deg)`, \"-webkit-transform\":`rotateY(${ax}deg) rotateX(${ay}deg)`, \"-moz-transform\":`rotateY(${ax}deg) rotateX(${ay}deg)`}});\n  }\n\n  render() {\n    const { openDates, onClickHandler } = this.props;\n    return (\n      <main className=\"calendar\">\n        {this.state.dates.map((date, i) => (\n          <Card \n            key={`date-${i}`} \n            number={date}\n            name={openDates[date]}\n            onClick={onClickHandler}/>\n        ))}\n      </main>\n    );\n  }\n}\nexport default Calendar;\n","import React from 'react';\n\nlet angle = 0;\nlet mp = 300; //max particles\nlet particles = [];\nconst W = window.innerWidth;\nconst H = window.innerHeight;\n\nconst draw = (ctx, particles) => {\n\n  ctx.clearRect(0,0,W,H);\n\n  ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n  ctx.beginPath();\n  for (var i = 0; i < mp; i++) {\n    var p = particles[i];\n    ctx.moveTo(p.x, p.y);\n    ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2, true);\n  }\n  ctx.fill();\n  update(particles);\n};\n\nconst update = particles => {\n  angle += 0.01;\n  for (let i = 0; i < mp; i++) {\n    var p = particles[i];\n\n    p.y += Math.cos(angle + p.d) + 1 + p.r / 2;\n    p.x += Math.sin(angle) * 2;\n\n    if (p.x > W + 5 || p.x < -5 || p.y > H) {\n      if (i % 3 > 0) {\n        //66.67% of the flakes\n        particles[i] = { x: Math.random() * W, y: -10, r: p.r, d: p.d };\n      } else {\n        if (Math.sin(angle) > 0) {\n          particles[i] = { x: -5, y: Math.random() * H, r: p.r, d: p.d };\n        } else {\n          particles[i] = { x: W + 5, y: Math.random() * H, r: p.r, d: p.d };\n        }\n      }\n    }\n  }\n};\n\nclass Canvas extends React.Component {\n  constructor() {\n    super();\n    this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    \n    const ctx = this.canvas.current.getContext('2d');\n  \n    //snowflake particles\n    for (var i = 0; i < mp; i++) {\n      particles.push({\n        x: Math.random() * W, //x-coordinate\n        y: Math.random() * H, //y-coordinate\n        r: Math.random() * 4 + 1, //radius\n        d: Math.random() * mp //density\n      });\n    }\n  \n    //Lets draw the flakes\n    setInterval(() => draw(ctx, particles), 33);\n  }\n  \n  render() {\n    return (\n      <canvas className=\"canvas\" width={W} height={H} ref={this.canvas}>\n      </canvas>\n    );\n  }\n};\n\nexport default Canvas;\n","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport Calendar from './components/Calendar';\nimport Canvas from './components/Canvas';\nimport './App.css';\nimport config from './config.json';\n\nfirebase.initializeApp(config);\n\nconst firestore = firebase.firestore();\nfirestore.settings({timestampsInSnapshots: true});\n\nconst datesDocRef = firestore.doc('calendar/dates');\nconst usersDocRef = firestore.doc('calendar/users');\n\nclass App extends Component {\n  state = {\n    names: [],\n    openDates: {}\n  }\n\n  async componentWillMount() {\n    datesDocRef.onSnapshot((datesDoc) => {\n      if(datesDoc && datesDoc.exists) {\n        this.setState({\n          openDates: datesDoc.data()\n        })\n       }\n    });\n    usersDocRef.get().then((userDoc) => {\n      if(userDoc && userDoc.exists) {\n        const selectedNames = Object.values(this.state.openDates).map(name => name);\n        const names = userDoc.data().names.filter(name => selectedNames.indexOf(name) === -1)\n        this.setState({names: names});\n       }\n    });\n  }\n\n  openCurrentDate = (number) => {\n    const currentDate = new Date().getDate();\n    \n    if(number < currentDate) {\n      const randomNumber = Math.floor(Math.random() * this.state.names.length) ;\n      const selectedName = this.state.names[randomNumber];\n      datesDocRef.set({\n        ...this.state.openDates,\n        [number]: selectedName\n      })\n      .then(() => console.log('Save dates complete'))\n      .catch(error => console.log(`Save dates faild: ${error}`))\n      const filteredNames = this.state.names.filter(name => name !== selectedName);\n      this.setState({names: filteredNames})\n    }\n    \n  }\n\n  render() {\n    const { openDates } = this.state;\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <div className=\"header__content\">        \n            <h1>Serviceteam julekalender</h1>\n          </div>\n        </header>\n        <Canvas />\n        <Calendar \n          openDates={openDates}\n          onClickHandler={this.openCurrentDate}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}